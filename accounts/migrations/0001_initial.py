# Generated by Django 5.1.4 on 2024-12-13 14:42

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RoleMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the role.', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the role is active.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the role was created.', verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the role was last updated.', verbose_name='Last Update Date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when the role was deleted.', null=True, verbose_name='Deleted At')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'db_table': 'role_master',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, help_text='First name of the user.', max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, help_text='Last name of the user.', max_length=255, null=True)),
                ('email', models.EmailField(db_index=True, max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the user is active.')),
                ('is_superuser', models.BooleanField(default=False, help_text='Whether the user is a superuser.')),
                ('is_staff', models.BooleanField(default=False, help_text='Whether the user is a staff member.')),
                ('is_admin', models.BooleanField(default=False, help_text='Whether the user is an admin.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the role was created.', verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the role was last updated.', verbose_name='Last Update Date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when the role was deleted.', null=True, verbose_name='Deleted At')),
                ('groups', models.ManyToManyField(blank=True, help_text='Groups this user belongs to.', related_name='user_master_groups', related_query_name='user_master_group', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_master_permissions', related_query_name='user_master_permission', to='auth.permission')),
                ('role', models.ForeignKey(blank=True, default='ATTENDEE', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_role', to='accounts.rolemaster')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalRoleMaster',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the role.', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the role is active.')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when the role was created.', verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when the role was last updated.', verbose_name='Last Update Date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when the role was deleted.', null=True, verbose_name='Deleted At')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Role',
                'verbose_name_plural': 'historical Roles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserMaster',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(db_index=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, help_text='First name of the user.', max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, help_text='Last name of the user.', max_length=255, null=True)),
                ('email', models.EmailField(db_index=True, max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the user is active.')),
                ('is_superuser', models.BooleanField(default=False, help_text='Whether the user is a superuser.')),
                ('is_staff', models.BooleanField(default=False, help_text='Whether the user is a staff member.')),
                ('is_admin', models.BooleanField(default=False, help_text='Whether the user is an admin.')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when the role was created.', verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when the role was last updated.', verbose_name='Last Update Date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when the role was deleted.', null=True, verbose_name='Deleted At')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, db_constraint=False, default='ATTENDEE', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.rolemaster')),
            ],
            options={
                'verbose_name': 'historical User',
                'verbose_name_plural': 'historical Users',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
